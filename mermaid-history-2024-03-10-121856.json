[{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL = 0\n    PLANT = 1\n    FUNGI = 2\n    INSECT = 3\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL = 0\n    INKWELL = 1\n    MANUSCRIPT = 2\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    %% - animalCount : int\n    %% - plantCount : int\n    %% - fungiCount : int\n    %% - insectCount : int\n    - resourcesArr : int[]\n\n    %% - quillCount : int\n    %% - inkwellCount : int\n    %% - manuscriptCount : int\n    - objectsArr : int[]\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-233.89548733944025,"y":-80.22843687792519},"zoom":1.2487106323242188,"editorMode":"code"},"time":1710069522712,"type":"auto","id":"7c94c3a2-dd60-42d1-8a5c-5f4829d698f2","name":"sour-summer"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL = 0\n    PLANT = 1\n    FUNGI = 2\n    INSECT = 3\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL = 0\n    INKWELL = 1\n    MANUSCRIPT = 2\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    %% - animalCount : int\n    %% - plantCount : int\n    %% - fungiCount : int\n    %% - insectCount : int\n    - resourcesArr : int[]\n\n    %% - quillCount : int\n    %% - inkwellCount : int\n    %% - manuscriptCount : int\n    - objectsArr : int[]\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":8.104709472623545,"y":-36.228406136834465},"zoom":1.2487106323242188,"editorMode":"code"},"time":1710068922724,"type":"auto","id":"c754703a-4d26-4a34-a2bf-feb4dd2ecf57","name":"better-gold"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL = 0\n    PLANT = 1\n    FUNGI = 2\n    INSECT = 3\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    %% - animalCount : int\n    %% - plantCount : int\n    %% - fungiCount : int\n    %% - insectCount : int\n    - resourceArr : int[]\n\n    %% - quillCount : int\n    %% - inkwellCount : int\n    %% - manuscriptCount : int\n    -objectsArr\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":0.10474086475389299,"y":-57.22837920462166},"zoom":1.2487106323242188,"editorMode":"code"},"time":1710068862713,"type":"auto","id":"d6558b22-1cb5-48a9-800a-3d3221731897","name":"alive-coffeeshop"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL = 0\n    PLANT = 1\n    FUNGI = 2\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":0.10474086475389299,"y":-57.22837920462166},"zoom":1.2487106323242188,"editorMode":"code"},"time":1710068742721,"type":"auto","id":"1af62bad-b787-4801-b660-100e7bbfc7fb","name":"flaky-accident"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-1.9115285716822967,"y":-7.891121360616587},"zoom":1.1545376777648926,"editorMode":"code"},"time":1710068562722,"type":"auto","id":"56907f89-5d24-4130-9787-b83601818eb5","name":"long-restaurant"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-1.9115285716822967,"y":-7.891121360616587},"zoom":1.1545377209987993,"editorMode":"code"},"time":1710068442723,"type":"auto","id":"aac4d996-bf80-4e18-81d8-931a34bfaa55","name":"raspy-baby"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Front{\n    @override()\n    + getResources() List ~ ResourceType ~\n    @override()\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-102.9318242426238,"y":-299.5563151073251},"zoom":1.3505654335021973,"editorMode":"code"},"time":1710068382724,"type":"auto","id":"2216ac43-47c9-456b-a1c3-8f00f2047be1","name":"enough-nail"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\nclass Front{\n    +@override\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":29.0681887125659,"y":-311.5563308297675},"zoom":1.3505654335021973,"editorMode":"code"},"time":1710068322742,"type":"auto","id":"a0e2a57d-b329-4382-9e78-c28e5011b325","name":"pitiful-pencil"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\nclass Front{\n    @override\n    \n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":29.0681887125659,"y":-311.5563308297675},"zoom":1.3505654335021973,"editorMode":"code"},"time":1710068262712,"type":"auto","id":"a3bcebda-1c3f-4847-8c31-30fb0b7b6de0","name":"aloof-pencil"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":29.0681887125659,"y":-311.5563308297675},"zoom":1.3505654182874178,"editorMode":"code"},"time":1710068143264,"type":"auto","id":"9d02f780-947d-46b8-a8b4-ab7f277a3d5d","name":"lively-machine"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-16.931737712187726,"y":-306.55643099619397},"zoom":1.3505654182874178,"editorMode":"code"},"time":1710068082723,"type":"auto","id":"7477342d-e4fc-4238-8ce6-4d0400b1b03b","name":"brown-farmer"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-17.237220108726177,"y":-112.02394284288394},"zoom":1.4607281905241754,"editorMode":"code"},"time":1710068023263,"type":"auto","id":"415f8107-5a89-4c94-97ac-da243dff76e5","name":"unimportant-plumber"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-1.6758252313680089,"y":-47.62471245697563},"zoom":1.1545379326595646,"editorMode":"code"},"time":1710067962714,"type":"auto","id":"c095a16f-32e2-44d4-976f-ca60489b8c87","name":"calm-teacher"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":58.11850054550787,"y":18.731828520700184},"zoom":0.8437101370481741,"editorMode":"code"},"time":1710067902713,"type":"auto","id":"87767579-dfad-4125-b6ff-5bfe1fae7a66","name":"hot-fountain"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-135.63186390713602,"y":-206.30268394386735},"zoom":1.2487113021970488,"editorMode":"code"},"time":1710067842714,"type":"auto","id":"aa0f87b7-ebc0-41fc-a06f-1dabf254304a","name":"abnormal-eye"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nclass ResourceCorner{\n    - resource : ResourceType\n}\n\nclass ObjectCorner{\n    - object : ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-263.0421594462214,"y":-449.05651621212996},"zoom":1.460728645324707,"editorMode":"code"},"time":1710067782724,"type":"auto","id":"cdc17f64-1724-41b0-9a29-05115c5c10b4","name":"chubby-lunch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nc\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List ~ Card ~\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-263.0421594462214,"y":-449.05651621212996},"zoom":1.460728645324707,"editorMode":"code"},"time":1710067722716,"type":"auto","id":"b1b83b58-a42f-44a1-abe6-206ae1386f56","name":"icy-lunch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-263.0421594462214,"y":-449.05651621212996},"zoom":1.4607285884746326,"editorMode":"code"},"time":1710067662721,"type":"auto","id":"3abe1da3-0806-4867-8e30-8a7ed94d8ff6","name":"nutritious-beard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    <<abstract>>\n    + canPlace() bool\n    + getObject() ObjectType\n    + getResource() ResourceType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    <<abstract>>\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-233.19294469727657,"y":-424.90565723831025},"zoom":1.460728645324707,"editorMode":"code"},"time":1710067602722,"type":"auto","id":"fde6ec57-4c3c-4ae9-865e-4b1c13ca92b3","name":"large-machine"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n    + getObject() ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-157.19295167975673,"y":-369.9056528193927},"zoom":1.4607286963272172,"editorMode":"code"},"time":1710067542722,"type":"auto","id":"58819f7f-0ce5-48fa-89c9-6b83eeef78bd","name":"curved-parrot"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\n%% class Front{\n\n%% }\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n    + getObject() ObjectType\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-293.7552306434065,"y":-351.6642088003902},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067482720,"type":"auto","id":"77abad3e-e762-4138-8347-d1e6c07bb486","name":"alert-shoe"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\nclass Front{\n    + getCornerResources() List ~ ResourceType ~\n    + getCornerObjects() List ~ ObjectType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-331.75525301959226,"y":-335.6642344095765},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067422721,"type":"auto","id":"7b9fc059-982b-421d-8689-a66e68561fd0","name":"huge-stone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n}\n\nclass Front{\n    + getCornerResources() List ~ ResourceType ~\n    + getCornerResources() List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-145.75526774061305,"y":-327.6642377016341},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067362720,"type":"auto","id":"94725894-74fc-4b63-8ff8-41da1fd305d6","name":"blue-morning"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    + getPermanentResources() List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-145.75526774061305,"y":-327.6642377016341},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067302722,"type":"auto","id":"e0307e61-eb8c-4ea6-b427-da8ff03f1f40","name":"rough-girl"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n    + getObjects() List ~ ObjectType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    + getPermanentResources() List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":74.24471292508824,"y":-183.66421859030112},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067242722,"type":"auto","id":"4aae4ba5-8f4a-4981-aada-5c6870a74450","name":"annoyed-nigeria"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + getResources() List ~ ResourceType ~\n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    + getPermanentResources() List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-20.437383290815117,"y":-298.39944963058207},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067062713,"type":"auto","id":"d5d7f8da-3503-4571-8fdb-afd7cd50cfff","name":"flabby-crowd"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + \n}\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    + getPermanentResources() List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-20.437383290815117,"y":-298.39944963058207},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710067002713,"type":"auto","id":"1334ef75-78fb-43f6-8935-a032dc96d222","name":"rotten-baby"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResources : List ~ ResourceType ~\n\n    + getPermanentResources() List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":9.562568691960593,"y":-201.39943849026758},"zoom":1.3505661487579346,"editorMode":"code"},"time":1710066942727,"type":"auto","id":"62d32ea8-ae70-4fae-a66f-92a08ae1dfef","name":"unkempt-psychiatrist"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class StarterCard{\n\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ~ ResourceType ~\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":23.56254628392258,"y":-300.3994464294338},"zoom":1.3505660951786722,"editorMode":"code"},"time":1710066882721,"type":"auto","id":"3117adb7-8766-4e83-849d-f2651ac05c8f","name":"bulky-army"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - permanentResource : List ~ ResourceType ~\n    \n    + getPermanentResources() List ~ ResourceType ~\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":51.66945747003399,"y":-340.08918338077217},"zoom":1.7087444789265867,"editorMode":"code"},"time":1710066822722,"type":"auto","id":"d7b16857-8184-45bc-9bed-d628fabc72f0","name":"zealous-activity"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - permanentResource : List ~ ResourceType ~\n    \n    + getPermanentResources() List ~ ResourceType ~\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":7.091938374035577,"y":-110.91249478837995},"zoom":1.3505663871765137,"editorMode":"code"},"time":1710066762723,"type":"auto","id":"d523b24a-9a6f-4f80-b1be-684fbbf3f699","name":"handsome-eggplant"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - permanentResource : List ~ ResourceType ~\n    \n    + \n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":7.091938374035577,"y":-110.91249478837995},"zoom":1.3505663847897438,"editorMode":"code"},"time":1710066702722,"type":"auto","id":"f90e07db-e7a0-443d-9fc7-28ee51ab7d63","name":"melted-lizard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - permanentResource : List ~ ResourceType ~\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-21.25009976677331,"y":-27.450868512967208},"zoom":1.4607291425117592,"editorMode":"code"},"time":1710066642722,"type":"auto","id":"84b8a462-26d5-4d01-bfcd-a6c86262af04","name":"unkempt-zettabyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - permanentResource : List ~ ResourceType ~\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-17.250151758173445,"y":-49.45089153199585},"zoom":1.4607291425117592,"editorMode":"code"},"time":1710066582723,"type":"auto","id":"bad75360-cb37-4777-8580-c2bbb6f3a5cc","name":"unsightly-ghost"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - permanentResource : List ~ ResourceType ~\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":160.05651716681314,"y":-129.40255939297325},"zoom":1.2487118244171143,"editorMode":"code"},"time":1710066522714,"type":"auto","id":"908cea6a-33c6-447a-bcdc-e29c31849767","name":"busy-tent"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass StarterCard{\n    - List ~ \\`~ ~\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":160.05651716681314,"y":-129.40255939297325},"zoom":1.2487118244171143,"editorMode":"code"},"time":1710066462716,"type":"auto","id":"95a28854-3dc4-4b56-9e00-29758efed00c","name":"hollow-baby"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place() void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":104.37535070115801,"y":-194.51336933205766},"zoom":1.4607291929536015,"editorMode":"code"},"time":1710066402776,"type":"auto","id":"749ab8a2-f327-4958-a24b-b83c84af7c4a","name":"flaky-advantage"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":37.57225871139007,"y":-8.105766933400758},"zoom":1.5798778496283568,"editorMode":"code"},"time":1710066342789,"type":"auto","id":"35f7f80d-85b6-4f9e-a92b-cc68b693385a","name":"fierce-lizard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int) void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-516.3927789126394,"y":-21.089435493089717},"zoom":1.5798779726028442,"editorMode":"code"},"time":1710066282722,"type":"auto","id":"85ba595c-3b96-4929-9981-7f8e58a5148d","name":"tiny-salesclerk"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-516.3927789126394,"y":-21.089435493089717},"zoom":1.5798779726028442,"editorMode":"code"},"time":1710066222722,"type":"auto","id":"0df8b18e-455a-4156-b30b-4aa6bd59841b","name":"inexpensive-honey"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-516.3927789126394,"y":-21.089435493089717},"zoom":1.5798779938677678,"editorMode":"code"},"time":1710066162713,"type":"auto","id":"48236b14-420c-40ca-a710-657746a9ce62","name":"acceptable-shoe"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-508.39273427332125,"y":-55.08943056190388},"zoom":1.5798779938677678,"editorMode":"code"},"time":1710066102719,"type":"auto","id":"d801802b-7cb9-49ec-b95a-b13b297dc2dd","name":"bald-student"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-547.4089731974418,"y":-106.21006347380526},"zoom":1.7087451761688763,"editorMode":"code"},"time":1710066042723,"type":"auto","id":"5bddcc16-c59e-48c0-b1ec-4734cd58913c","name":"sticky-xylophone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board : HashMap ~ PlayerModel, int ~\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-166.67210636298577,"y":68.7711734843373},"zoom":1.2734326124191284,"editorMode":"code"},"time":1710065982714,"type":"auto","id":"74bfb5ef-48bb-4026-b017-b60ee1e9388b","name":"petite-disease"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~) Card\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-166.67210636298577,"y":68.7711734843373},"zoom":1.2734326124191284,"editorMode":"code"},"time":1710065862722,"type":"auto","id":"1e2fa558-a485-413e-a2ea-943d9500c44e","name":"better-france"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-166.67210636298577,"y":68.7711734843373},"zoom":1.2734326124191284,"editorMode":"code"},"time":1710065802713,"type":"auto","id":"76a5aa8d-3337-4db6-956f-7791b542b8fb","name":"refined-monitor"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-177.67209572612782,"y":69.77120817480416},"zoom":1.2734326124191284,"editorMode":"code"},"time":1710065682721,"type":"auto","id":"e40ad0e1-efe1-485e-8006-b87364620faf","name":"brief-tent"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n    + placeStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-80.6721823923844,"y":11.771157287693317},"zoom":1.2734326124191284,"editorMode":"code"},"time":1710065622721,"type":"auto","id":"d300e377-f7f6-4027-a3e0-ea84c7b4ffd6","name":"ugly-egg"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    %% - topCard : Card\n    %% - bottomCard : Card\n    %% - leftCard : Card\n    %% - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":55.327828727187644,"y":-2.2288577004506323},"zoom":1.2734326124191284,"editorMode":"code"},"time":1710065562712,"type":"auto","id":"f118ec7d-41fa-4376-b932-0e18864ecdf6","name":"poor-hydrogen"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":55.327828727187644,"y":-2.2288577004506323},"zoom":1.2734325560900168,"editorMode":"code"},"time":1710065502714,"type":"auto","id":"e3abaad4-a4d2-420f-b6e5-95ed699c2c1f","name":"echoing-oyster"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-84.87387988903401,"y":39.09786044299856},"zoom":1.3773036562577388,"editorMode":"code"},"time":1710065442735,"type":"auto","id":"0eb23d01-a6ae-4c53-8bd5-ad114c403c2c","name":"savory-motherboard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-90.87383878844486,"y":-60.90214845952433},"zoom":1.3773036562577388,"editorMode":"code"},"time":1710065382712,"type":"auto","id":"9d2dcffb-8484-47cb-acc4-6f63a1a82e30","name":"future-evening"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":33.12612354589262,"y":-4.9021654698235295},"zoom":1.3773036562577388,"editorMode":"code"},"time":1710065322713,"type":"auto","id":"9e2a8bd0-5c82-46c0-9725-47a8a0c53faf","name":"nervous-breakfast"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeStarterCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-513.8320985641641,"y":14.87446032987232},"zoom":1.611154556274414,"editorMode":"code"},"time":1710065262721,"type":"auto","id":"1e97064d-7e9e-4e99-bc30-57df65c25e98","name":"bent-insurance"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-569.8321641341824,"y":-51.12551849114029},"zoom":1.611154608450931,"editorMode":"code"},"time":1710065202716,"type":"auto","id":"e96d4a17-e3d0-4616-9df1-dd90839c9db0","name":"huge-byte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-505.8321679633687,"y":2.874495508122891},"zoom":1.611154608450931,"editorMode":"code"},"time":1710065142717,"type":"auto","id":"c4fd69cd-8b4d-494a-b4bb-6d0879433f5e","name":"adventurous-printer"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-464.83233984614213,"y":-89.1254875006625},"zoom":1.611154608450931,"editorMode":"code"},"time":1710064962723,"type":"auto","id":"b5285267-d8af-45d1-b7b4-490d349bbcd2","name":"wailing-twilight"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + equals(obj : Object) bool\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-363.35433260300624,"y":-16.167994983956483},"zoom":2.204713821411133,"editorMode":"code"},"time":1710064902714,"type":"auto","id":"41bf8b40-aaf3-485d-be27-5f03b21ddc43","name":"abrasive-boots"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getY() int\n    + equals(obj, obj) bool\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-363.35433260300624,"y":-16.167994983956483},"zoom":2.204713821411133,"editorMode":"code"},"time":1710064842721,"type":"auto","id":"90770fd0-1f30-4a6d-807c-aad00f8ad3ac","name":"clumsy-shampoo"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos : int\n    - yPos : int\n\n    + setX(x : int) void\n    + setY(y : int) void\n    + getX() int\n    + getX() int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-281.1030401541255,"y":-27.5145530974376},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064782715,"type":"auto","id":"990f1458-77ca-4003-adc1-c93c839fc351","name":"aloof-butcher"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass Position{\n    - xPos int\n    - yPos int\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-281.1030401541255,"y":-27.5145530974376},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064722723,"type":"auto","id":"70bf531a-f4b2-4897-b022-d8c3ecd3616c","name":"weak-easter"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + flipStarterCard()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-281.1030401541255,"y":-27.5145530974376},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064662722,"type":"auto","id":"ef4dd70b-54a4-4136-b409-85ea5be3f7ef","name":"full-gas"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\nGameController*-->\"1 ... n\" PlayerView\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-295.1030336174594,"y":-27.51461682028009},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064602762,"type":"auto","id":"c7b85929-bb16-41ea-b28a-a5b5c07c073b","name":"scruffy-continent"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n    + flipStarterCard()\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-357.1030653577882,"y":9.48537197308741},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064542721,"type":"auto","id":"64dde206-a3f1-4d46-b930-f2f16871a5f0","name":"able-branch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + flipStarterCard() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-357.1030653577882,"y":9.48537197308741},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064482721,"type":"auto","id":"77bd3021-bb1e-418e-b064-0e57206fda30","name":"muscular-holiday"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n    + placeCard() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-357.1030653577882,"y":9.48537197308741},"zoom":1.4896477460861206,"editorMode":"code"},"time":1710064422713,"type":"auto","id":"77bd90b9-239a-47e0-abf2-d965c162103e","name":"abrasive-vulture"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\n%% class Side{\n    \n%% }\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-357.1030653577882,"y":9.48537197308741},"zoom":1.4896477493442508,"editorMode":"code"},"time":1710064362721,"type":"auto","id":"81935c8c-2a64-488f-be6b-8d35ed6370ce","name":"panicky-morning"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n    + changeCurrSide() void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-60.28304822451548,"y":-1.685612878854613},"zoom":1.4896478652954102,"editorMode":"code"},"time":1710064302721,"type":"auto","id":"b6168c30-eab0-4d87-b786-c9887f897561","name":"burly-mother"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-122.28304276193091,"y":-7.685624174464834},"zoom":1.4896478346786013,"editorMode":"code"},"time":1710064242722,"type":"auto","id":"3babae3d-b7ec-448d-af37-926af819b591","name":"sparse-london"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-286.2831120192755,"y":-79.68563029886938},"zoom":1.4896478346786013,"editorMode":"code"},"time":1710064182722,"type":"auto","id":"ef174f10-48d0-4263-82d5-d93fd90cde7a","name":"average-lion"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-187.96587010041853,"y":-49.23061353083452},"zoom":1.3713387104062427,"editorMode":"code"},"time":1710064122722,"type":"auto","id":"424058c4-f91b-443b-af66-b56f9613978a","name":"echoing-brother"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-229.65156214730817,"y":34.45524864113588},"zoom":1.172295999151358,"editorMode":"code"},"time":1710064002712,"type":"auto","id":"9b175637-7535-40c2-bff6-c2c3c4b0a47f","name":"clean-shoe"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n    - starterCard : StarterCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-55.65161099574113,"y":162.45525479580164},"zoom":1.172295999151358,"editorMode":"code"},"time":1710063942723,"type":"auto","id":"349d325c-ada7-412b-aa25-2edd814464ed","name":"clean-arm"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n    + changeStarterSide()\n}\n\nclass PlayerView{\n    + setStarterCardChoice() void\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-343.4065321067294,"y":-18.425335597303775},"zoom":1.4767717123031616,"editorMode":"code"},"time":1710063882723,"type":"auto","id":"8f48f7f1-8f72-471b-b0db-5049db4c4dc6","name":"better-potato"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass PlayerView{\n    + set\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-343.4065321067294,"y":-18.425335597303775},"zoom":1.4767717123031616,"editorMode":"code"},"time":1710063702713,"type":"auto","id":"e96bd1dd-b607-4cb7-8773-a5903a4d17b6","name":"attractive-oyster"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass Player\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-343.4065321067294,"y":-18.425335597303775},"zoom":1.4767717123031616,"editorMode":"code"},"time":1710063642715,"type":"auto","id":"7900e0e8-8b12-4270-9794-bfd087455257","name":"cold-easter"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n    + update()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-343.4065321067294,"y":-18.425335597303775},"zoom":1.4767717123031616,"editorMode":"code"},"time":1710063522713,"type":"auto","id":"e4af1c98-b6a8-4183-a544-902bfec8e642","name":"gentle-oxygen"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1\" GameView\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-343.4065321067294,"y":-18.425335597303775},"zoom":1.4767717336049373,"editorMode":"code"},"time":1710063462718,"type":"auto","id":"981162b6-097d-407f-bc2c-39b7a36ef117","name":"tight-terabyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\nGameController*-->\"1 ... n\" PlayerModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-396.7674110185443,"y":42.00423655747425},"zoom":1.4767723083496094,"editorMode":"code"},"time":1710063402714,"type":"auto","id":"d2aac76f-bf01-43e8-b103-947476dbd217","name":"careful-keyboard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleResourceCards() void\n    + restoreVisibleGoldenCards() void\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-415.76751632735613,"y":50.00421279912506},"zoom":1.476772260118076,"editorMode":"code"},"time":1710063342713,"type":"auto","id":"7ba38924-b993-494f-93c9-d44c716043c7","name":"rhythmic-megabyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleAllDecks() void\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame() void\n}\n\nGameController*-->\"1\" GameModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-1153.8941397438707,"y":-371.5185989183756},"zoom":2.0208241939544678,"editorMode":"code"},"time":1710063282714,"type":"auto","id":"ee4311c8-9578-41a6-a75f-847d773500eb","name":"yellow-camera"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n\nGameController*-->\"1\" GameModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-1229.2949874906174,"y":-379.1668000366974},"zoom":2.1856584014701474,"editorMode":"code"},"time":1710063222713,"type":"auto","id":"fc3f1549-1965-4eaa-b485-a5c534257691","name":"flat-zoo"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n\nGameController*--> GameModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-1189.4781888233501,"y":-185.2075759980913},"zoom":2.3639378547668457,"editorMode":"code"},"time":1710063163190,"type":"auto","id":"378788ce-8b3c-4588-b762-810b0f8a4fbd","name":"hallowed-tomato"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-1346.6719337434624,"y":14.591996130748743},"zoom":2.3639385708017775,"editorMode":"code"},"time":1710063102714,"type":"auto","id":"97250445-ded5-4f5e-a458-337a83ce31b7","name":"obnoxious-airport"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-1081.1291218047702,"y":41.5130409669588},"zoom":2.18565923363164,"editorMode":"code"},"time":1710063042724,"type":"auto","id":"4179a1d4-95ac-4680-8d17-a2be56762aef","name":"billowy-controller"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-2617.4801088783443,"y":-201.75717105769817},"zoom":3.4986859603076823,"editorMode":"code"},"time":1710062862713,"type":"auto","id":"67a75644-ea59-4251-8285-a2a507dc078c","name":"brash-match"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-530.4340675044878,"y":55.5649168621042},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062803266,"type":"auto","id":"097ebf6c-fa04-4714-b40a-63842a7c7995","name":"damaged-arm"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ ObjectiveCard ~\n    - commonObjectives : List ~ ObjectiveCard ~\n\n    - starterCardDeck : List ~ Card ~\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List ~ Card ~)\n    + restoreVisibleCards(deck : List ~ Card ~)\n    + drawCard(deck : List ~ Card ~)\n    + flipStarterCard(player: PlayerModel)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : PlayerModel)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-620.4341751695987,"y":75.56489700172757},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062742724,"type":"auto","id":"34c9ace3-089e-45e1-9802-6337764f9fc3","name":"raspy-ad"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ Card ~\n    - resourceCardDeck : List ~ Card ~\n\n    - visibleGoldenCards : List ~ Card ~\n    - goldenCardDeck : List ~ Card ~\n\n    - objectiveCardDeck : List ~ Card ~\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062682719,"type":"auto","id":"ad5b5212-ee0a-4543-a18a-4f41c25f27f4","name":"glamorous-cpu"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ PlayerModel ~\n\n    - visibleResourceCards : List ~ ResourceCard ~\n    - resourceCardDeck : List ~ ResourceCard ~\n\n    - visibleGoldenCards : List ~ GoldenCard ~\n    - goldenCardDeck : List ~ GoldenCard ~\n\n    - objectiveCardDeck : List ~ ResourceCard ~\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062622731,"type":"auto","id":"892b1341-9b09-48f9-9609-1618fdd6b24d","name":"lemon-church"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List ~ \n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initializeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062563046,"type":"auto","id":"ed6bb440-b52e-4dd6-84c9-16abcd5078fc","name":"alert-nigeria"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap ~ Position, Card ~\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062502729,"type":"auto","id":"22aa72ef-0266-4e97-84ec-11875a2cecdc","name":"uninterested-belgium"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap \\Position, Card/\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062443287,"type":"auto","id":"cbe3f5f7-ae3d-4c72-b1c4-f61c7d4141f4","name":"colossal-action"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap \\Position, Card\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062382722,"type":"auto","id":"eeddfff1-a0c3-4f9d-a9e5-333d4d4e7eca","name":"clever-nurse"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : HashMap <Position, Card>\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903117656707764,"editorMode":"code"},"time":1710062322716,"type":"auto","id":"d2d4352a-0834-4210-a0ee-0bd4b8c16104","name":"lemon-room"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-505.43419634491903,"y":110.56497562223147},"zoom":1.5903118112895671,"editorMode":"code"},"time":1710062202717,"type":"auto","id":"2a0deec7-b8eb-48e0-869d-af0e6ea449fd","name":"elegant-toothbrush"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-567.4342230246145,"y":122.56497898163998},"zoom":1.5903118112895671,"editorMode":"code"},"time":1710062142722,"type":"auto","id":"7f48b9d0-a70f-444b-b480-2ea3ad435581","name":"wooden-printer"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-602.6051400127888,"y":194.55275812161213},"zoom":1.3594863414764404,"editorMode":"code"},"time":1709888735530,"type":"auto","id":"65b520c2-28b8-420c-b538-6cb222f48a8c","name":"small-morning"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-306.0843901838656,"y":21.821986560904826},"zoom":1.293406606535271,"editorMode":"code"},"time":1709887744823,"type":"auto","id":"e0bc2943-c6ea-496e-bc38-faefe0ed2d62","name":"massive-lizard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":16.885837613754518,"y":-127.75929635702849},"zoom":1.398906946182251,"editorMode":"code"},"time":1709887684824,"type":"auto","id":"113c196c-4325-48c2-bbb7-3848c95a93dd","name":"ugly-ability"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-425.1141890172551,"y":74.2407042362529},"zoom":1.398906946182251,"editorMode":"code"},"time":1709885165514,"type":"auto","id":"bd1e8f58-5e9b-4880-8034-766adb0424e9","name":"fierce-traffic"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-425.1141890172551,"y":74.2407042362529},"zoom":1.398906946182251,"editorMode":"code"},"time":1709848730781,"type":"auto","id":"95e5b43a-6337-4e00-ba60-10528c96212c","name":"aggressive-iron"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-425.1141890172551,"y":74.2407042362529},"zoom":1.398906946182251,"editorMode":"code"},"time":1709847770773,"type":"auto","id":"785fd57b-30a9-4588-bd44-102819d4396b","name":"sour-analyst"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":26.885903126857443,"y":50.24070130581339},"zoom":1.398906946182251,"editorMode":"code"},"time":1709846990775,"type":"auto","id":"170ebeae-937c-4308-8375-2bbefdfcfe0b","name":"harsh-father"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":136.8858093909501,"y":-77.75928475986261},"zoom":1.398906946182251,"editorMode":"code"},"time":1709846930773,"type":"auto","id":"24cd21d7-24d4-4ae2-8878-aa3f455a147f","name":"strong-easter"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - playersList : List\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-297.11429164158335,"y":44.240678400702464},"zoom":1.398906946182251,"editorMode":"code"},"time":1709846870780,"type":"auto","id":"9f9741fa-388f-4079-ab62-64d3855f228f","name":"broad-apple"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-297.11429164158335,"y":44.240678400702464},"zoom":1.398906970612612,"editorMode":"code"},"time":1709846810771,"type":"auto","id":"e6486029-0002-445d-ac72-13ad26ecbc66","name":"brave-kilobyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-29.114291192187373,"y":-33.7592992266576},"zoom":1.398906970612612,"editorMode":"code"},"time":1709846690776,"type":"auto","id":"df8284b6-fa95-48c6-8ffb-44c11152244a","name":"abnormal-london"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-533.221246141944,"y":46.890006031129516},"zoom":1.5096419647686616,"editorMode":"code"},"time":1709845850774,"type":"auto","id":"c1455c19-deb5-41b1-a1f7-5ad6eb065c20","name":"orange-eventide"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-523.2212165336424,"y":-13.109980197581763},"zoom":1.5096419647686616,"editorMode":"code"},"time":1709845430776,"type":"auto","id":"1c2cb0b1-2cda-48e9-ac68-3abe7c0398e6","name":"rancid-candle"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-553.2212096479981,"y":42.89002290097364},"zoom":1.5096419647686616,"editorMode":"code"},"time":1709845010772,"type":"auto","id":"cb27eeb1-32e7-4add-bf43-125f9bcc7e0e","name":"green-pencil"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-457.3474867738918,"y":57.0873799273095},"zoom":1.395790457725525,"editorMode":"code"},"time":1709844110785,"type":"auto","id":"b25c8f23-03a2-4290-af63-1e912eda9bc1","name":"damaged-toddler"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x : int, y : int)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-453.3474523879318,"y":-43.91264764018625},"zoom":1.395790457725525,"editorMode":"code"},"time":1709844050784,"type":"auto","id":"33d22acd-8f17-4ddc-a875-3cb89e8c0dae","name":"puny-holiday"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n\n    + drawCard(card : Card)\n    + placeCard(card : Card, x)\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-311.34738208781766,"y":44.08735666535996},"zoom":1.395790457725525,"editorMode":"code"},"time":1709843990777,"type":"auto","id":"72e53373-2c5a-42d8-b69d-88ef0e30fd4c","name":"large-bed"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass PlayerModel{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-311.34738208781766,"y":44.08735666535996},"zoom":1.395790457725525,"editorMode":"code"},"time":1709843930775,"type":"auto","id":"b0a7a2d3-70d3-418f-bf8a-1234afc3e33f","name":"broken-arm"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-403.3473381078324,"y":70.0873742802338},"zoom":1.395790457725525,"editorMode":"code"},"time":1709843810783,"type":"auto","id":"c15fb91e-db40-4dbe-909a-5239ff6f6c66","name":"scruffy-pizza"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n    + placeCard(card : Card, player : Player)\n    + selectToken(token )\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-403.3473381078324,"y":70.0873742802338},"zoom":1.395790457725525,"editorMode":"code"},"time":1709843750777,"type":"auto","id":"b13064dc-242d-45f3-9be6-574e33e85d22","name":"wonderful-balloon"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-58.32486076876461,"y":-161.49932497757865},"zoom":1.3957905185566317,"editorMode":"code"},"time":1709843630774,"type":"auto","id":"ea5f45dc-57c8-4b0a-aeca-00e71a0aa799","name":"howling-brother"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-246.32481914867003,"y":-223.49932007323298},"zoom":1.3957905185566317,"editorMode":"code"},"time":1709843570776,"type":"auto","id":"613ebc5b-d490-4ba2-95c8-c29c32c99dd4","name":"flaky-elephant"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-84.32487951676686,"y":-213.4993164061143},"zoom":1.3957905185566317,"editorMode":"code"},"time":1709843390774,"type":"auto","id":"4cd6aea5-8d32-47d6-9bd0-d357eea548d5","name":"antsy-coffeeshop"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-52.324941489937345,"y":-67.49929972015704},"zoom":1.3957905185566317,"editorMode":"code"},"time":1709843330777,"type":"auto","id":"4de1caf4-7a3e-452c-910d-f4c71fe3cb8e","name":"flat-gigabyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-600.3248476162389,"y":28.500698630206955},"zoom":1.3957905185566317,"editorMode":"code"},"time":1709843270787,"type":"auto","id":"09061f75-bb50-4afe-942c-85a96e1b39aa","name":"purple-leather"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":226.54354529972022,"y":-158.96510352492618},"zoom":1.3160731348809809,"editorMode":"code"},"time":1709843210780,"type":"auto","id":"f7115d5f-e8ad-4ce6-a036-549e7b5aa66c","name":"careful-psychiatrist"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    + canPlace() bool\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-224.7766010002413,"y":-357.34499516891043},"zoom":1.6651036739349365,"editorMode":"code"},"time":1709843150782,"type":"auto","id":"ad19c127-6bd5-44f6-af40-4a80239b5076","name":"purple-psychiatrist"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-166.7765519386855,"y":-219.34500729866846},"zoom":1.6651036406788138,"editorMode":"code"},"time":1709843030780,"type":"auto","id":"00b4ce93-35ef-47b7-bdc8-777faeb48ca5","name":"massive-vegetable"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-246.7765538933754,"y":-451.34503507951024},"zoom":1.6651037702871037,"editorMode":"code"},"time":1709842970780,"type":"auto","id":"a1665532-1cf0-42ba-b47a-59ec3d36be27","name":"worried-uganda"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard(card : Card, player : Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-661.073975373292,"y":53.59822340658464},"zoom":1.8009226322174072,"editorMode":"code"},"time":1709842730773,"type":"auto","id":"1a4d7b3a-0066-49ce-a84a-49d57afbb45d","name":"slimy-book"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + placeCard()\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-661.073975373292,"y":53.59822340658464},"zoom":1.8009226322174072,"editorMode":"code"},"time":1709842670784,"type":"auto","id":"d45f18ed-5170-4695-a50e-9871ff8e8723","name":"stocky-energy"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : List\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-661.073975373292,"y":53.59822340658464},"zoom":1.8009226322174072,"editorMode":"code"},"time":1709842370787,"type":"auto","id":"df719765-bbdc-43f9-b454-b9b488a97485","name":"huge-pencil"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-661.073975373292,"y":53.59822340658464},"zoom":1.8009226295927145,"editorMode":"code"},"time":1709842310787,"type":"auto","id":"e01beb88-29ce-4654-aff0-ea829d4abc70","name":"broken-parrot"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-272.78671516060945,"y":61.475232388859304},"zoom":1.16949109145027,"editorMode":"code"},"time":1709842070776,"type":"auto","id":"7a2744cd-9438-40fa-82ad-6abaaac04460","name":"itchy-lunch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":79.21327960218315,"y":13.475243672002563},"zoom":1.16949109145027,"editorMode":"code"},"time":1709827611352,"type":"auto","id":"182891d5-26c6-4978-b7db-ca17c1acc360","name":"abundant-jewellery"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":29.213330108378955,"y":33.475277723614454},"zoom":1.16949109145027,"editorMode":"code"},"time":1709826531360,"type":"auto","id":"9e449260-66b2-49fc-940a-51bd903a2ef5","name":"drab-insurance"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-44.78669124969677,"y":37.47527678335251},"zoom":1.16949109145027,"editorMode":"code"},"time":1709825271352,"type":"auto","id":"eab925f4-1a38-4cc4-b31c-8e4eb76d1c84","name":"sweet-train"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-364.79162466750296,"y":101.08925642849871},"zoom":1.264883914355846,"editorMode":"code"},"time":1709824911357,"type":"auto","id":"0318bdf6-1efd-44df-81f7-e8a599d9323d","name":"easy-quill"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-250.79165092827367,"y":111.08924530094077},"zoom":1.264883914355846,"editorMode":"code"},"time":1709824431356,"type":"auto","id":"9166ae46-444c-4d9f-9679-1889932b26f3","name":"fierce-oyster"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-37.71630787304002,"y":-182.2378686321925},"zoom":1.264883963583844,"editorMode":"code"},"time":1709824190771,"type":"auto","id":"8e0b981d-7016-4f2d-a402-ed61874db48d","name":"scarce-dusk"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":139.28372001019014,"y":-32.23786205206419},"zoom":1.264883963583844,"editorMode":"code"},"time":1709824011357,"type":"auto","id":"c55f3642-26e0-43b1-92be-49578b98ffd6","name":"fresh-zoo"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-282.9907065977046,"y":50.84332337137355},"zoom":1.3680577738132373,"editorMode":"code"},"time":1709823951362,"type":"auto","id":"9b8e07aa-6ab6-4a26-aecd-8e76a0d3a782","name":"helpless-king"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-106.9907860045016,"y":33.8433418593885},"zoom":1.3680577738132373,"editorMode":"code"},"time":1709823771350,"type":"auto","id":"56a7f7d9-7580-46ea-8d65-3c5cf30eff9f","name":"callous-airplane"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-523.9907044995017,"y":51.84334095026563},"zoom":1.3680577738132373,"editorMode":"code"},"time":1709823710777,"type":"auto","id":"92ab3c7b-7b6b-4a07-80cb-370af2e0b459","name":"aloof-summer"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":49.27751383219194,"y":78.3416270119561},"zoom":0.924348549848995,"editorMode":"code"},"time":1709823050778,"type":"auto","id":"2915a1fc-a0ee-49f9-bebc-4610a3dc4cdb","name":"thoughtless-keyboard"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":8.965805808671092,"y":101.4219190169955},"zoom":1.1694914555735703,"editorMode":"code"},"time":1709822930785,"type":"auto","id":"5a550992-5c5d-4141-b6c1-94e8803b8c81","name":"repulsive-garage"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\n%% class ResourceCard{\n%%     - cardType : ResourceType\n%% }\n\n%% class GoldenCard{\n%%     - cardType : ResourceType\n%% }\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard \"cardType\"*-->\"1\" ResourceType\nGoldenCard \"cardType\"*-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":25.054738124071086,"y":-79.32376322019698},"zoom":1.4796479940414429,"editorMode":"code"},"time":1709822870964,"type":"auto","id":"d3b065a7-462c-4b70-bdf0-81eca2905a77","name":"raspy-waitress"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nResourceCard *-->\"1\" ResourceType\nGoldenCard *-->\"1\" ResourceType\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":124.69153793889012,"y":-226.11503413557625},"zoom":1.6356818675994873,"editorMode":"code"},"time":1709822811003,"type":"auto","id":"d64ac2ff-256c-4805-a50e-c59f78a087a5","name":"beefy-russia"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":5.537095576584576,"y":-68.46760841780988},"zoom":1.7691007818538045,"editorMode":"code"},"time":1709822750781,"type":"auto","id":"780e6069-eeb9-4150-89e3-b44171b45e37","name":"hundreds-rain"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipStarterCard(player: Player)\n    + flipCard(card : Card)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-334.1539596635223,"y":164.10333356518083},"zoom":1.1953197717666626,"editorMode":"code"},"time":1709812966606,"type":"auto","id":"442f55c3-ebb2-498b-be7e-975c43a5e789","name":"silly-coffeeshop"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n    + flipCard(player: Player)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-334.1539596635223,"y":164.10333356518083},"zoom":1.1953197717666626,"editorMode":"code"},"time":1709809315281,"type":"auto","id":"650e3342-927f-4c2b-a032-2a4bfff129a1","name":"noisy-cricket"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-129.25716942843525,"y":217.52582121061218},"zoom":1.0555820585012605,"editorMode":"code"},"time":1709809255275,"type":"auto","id":"493fc1e8-d285-4a3b-b252-336b74b07ea4","name":"quiet-rocket"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\nclass GameView{\n    + flipStarterCard()\n}\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-810.5340077427177,"y":81.098524194571},"zoom":1.7111972570419312,"editorMode":"code"},"time":1709809136387,"type":"auto","id":"dc998a81-9fb0-490a-8c85-3ec995a0beea","name":"plump-lunch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - objectiveCardDeck : List\n    - commonObjectives : List\n\n    - starterCardDeck : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-810.5340077427177,"y":81.098524194571},"zoom":1.7111972570419312,"editorMode":"code"},"time":1709809075290,"type":"auto","id":"1d1b4f57-9179-4f29-a6c6-69677d6f026e","name":"helpless-shampoo"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    \n    - commonObjectives : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-810.5340077427177,"y":81.098524194571},"zoom":1.7111972570419312,"editorMode":"code"},"time":1709809015280,"type":"auto","id":"61d70f16-da79-43d3-aab3-da1f5cf08112","name":"adamant-accident"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + initizlizeDecks() void\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-810.5340077427177,"y":81.098524194571},"zoom":1.7111972570419312,"editorMode":"code"},"time":1709808955287,"type":"auto","id":"286da28a-b5f7-4b76-b9f7-23cc4e4854dd","name":"puny-balloon"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\nclass GameController{\n    + intializeGame()\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-264.51684202106975,"y":152.10962705925607},"zoom":1.224094271659851,"editorMode":"code"},"time":1709808895281,"type":"auto","id":"21ff062f-2509-4fb9-b51d-306ac0602e2b","name":"clever-rain"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-264.51684202106975,"y":152.10962705925607},"zoom":1.2240942619317041,"editorMode":"code"},"time":1709808835275,"type":"auto","id":"530b0008-7277-4315-92f1-f6823f85e9b9","name":"slow-australia"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-434.51693028019895,"y":105.10964219198505},"zoom":1.2240942619317041,"editorMode":"code"},"time":1709808775283,"type":"auto","id":"ef970104-1a29-43dc-99c7-595edeb9b029","name":"clever-microphone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-635.8452858348342,"y":-0.4674293122566979},"zoom":1.5046323909159942,"editorMode":"code"},"time":1709808535274,"type":"auto","id":"e72886e4-1e90-4575-b57e-bb2d3de02a3d","name":"whining-nigeria"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    + copyDeck(deck : List) List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-434.6686709019583,"y":79.96294041598372},"zoom":1.179836630821228,"editorMode":"code"},"time":1709808475274,"type":"auto","id":"61d3c9ef-df59-42e9-8cac-6237788b8857","name":"adventurous-branch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-434.6686709019583,"y":79.96294041598372},"zoom":1.179836630821228,"editorMode":"code"},"time":1709808415279,"type":"auto","id":"46893c3a-24f8-4887-93f0-ebe5fe6d8ae0","name":"abnormal-advertisement"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameModel{\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-434.6686709019583,"y":79.96294041598372},"zoom":1.179836630821228,"editorMode":"code"},"time":1709808295289,"type":"auto","id":"570428c6-3155-4fae-9ba1-c4dc70b5cc7e","name":"zealous-artist"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ \n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : List, player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-434.6686709019583,"y":79.96294041598372},"zoom":1.1798365899988974,"editorMode":"code"},"time":1709808235279,"type":"auto","id":"b0088230-30f9-447e-bc1b-204d5315097f","name":"hallowed-hydrogen"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ \n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + drawCard(deck : , player : Player)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-5.470479731539086,"y":125.27676893812443},"zoom":0.9353793263435364,"editorMode":"code"},"time":1709808175274,"type":"auto","id":"15b7c266-4641-43b9-9927-28e15e563dda","name":"small-salesclerk"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ \n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n    + giveCard()\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-5.470479731539086,"y":125.27676893812443},"zoom":0.9353793263435365,"editorMode":"code"},"time":1709808115281,"type":"auto","id":"912c48ad-08e8-4d88-abf9-a1ab9d1dd032","name":"numerous-sandwich"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ \n    <<singleton>>\n    - players : List\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-5.470479731539086,"y":125.27676893812443},"zoom":0.9353793263435365,"editorMode":"code"},"time":1709808055280,"type":"auto","id":"de808c4c-3a73-479b-ac5e-374c5a4cf86a","name":"yummy-mechanic"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ \n    <<singleton>>\n    - players :\n\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-5.470479731539086,"y":125.27676893812443},"zoom":0.9353793263435365,"editorMode":"code"},"time":1709807995285,"type":"auto","id":"bf7e9fe6-45fe-47b1-ae59-8e38babf6b48","name":"bored-england"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ \n    <<singleton>>\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-5.470479731539086,"y":125.27676893812443},"zoom":0.9353793263435365,"editorMode":"code"},"time":1709807755276,"type":"auto","id":"4c392123-7c66-45c2-b1b6-8335fc547464","name":"arrogant-psychiatrist"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{ singleton\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n\n    - tokens : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-172.79264326328314,"y":154.29015216138384},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709807696230,"type":"auto","id":"44feee1d-4774-46c1-a195-97401e95245b","name":"fierce-architect"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - starterDeck : List\n\n    - objectiveDeck : List\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-172.79264326328314,"y":154.29015216138384},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709807635280,"type":"auto","id":"6e7a5a7d-0713-40f4-883f-bb505bcad645","name":"mushy-king"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameResources{\n    - goldenDeck : List\n    - resourcesDeck : List\n\n    - \n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-417.79259651150727,"y":116.2901360000524},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709807575852,"type":"auto","id":"1bee23db-6184-40bc-9462-bbfa94ff6edf","name":"magnificent-argument"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-417.79259651150727,"y":116.2901360000524},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709807515278,"type":"auto","id":"04dc5832-bd58-44ea-a861-52f7b27db4ed","name":"salmon-megabyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass GameModel{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\n%% class GameView{\n\n%% }\n\n%% class GameController{\n\n%% }\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-425.7926047649928,"y":179.290126028035},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709806975859,"type":"auto","id":"23c414c8-1429-457c-af93-c11038e189d3","name":"sharp-xylophone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\nclass GameModel{\n\n}\n\nclass GameView{\n\n}\n\nclass GameController{\n    \n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-139.79263099523922,"y":187.29013428152052},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709806915289,"type":"auto","id":"2e6d573b-1ffa-4f7b-aa3c-0483240a60c7","name":"short-knife"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\nclass GameModel\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-52.792698066520785,"y":35.290131270623974},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709806855286,"type":"auto","id":"997b8754-d099-4ac1-b280-4453461f0741","name":"incalculable-hair"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n\nclass ","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-52.792698066520785,"y":35.290131270623974},"zoom":1.0966510772705078,"editorMode":"code"},"time":1709806795283,"type":"auto","id":"950da7a0-f05c-40d6-805e-226ec1d12ef6","name":"damaged-answer"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - xPos : int\n    - yPos : int\n\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-52.792698066520785,"y":35.290131270623974},"zoom":1.0966510569455918,"editorMode":"code"},"time":1709806615278,"type":"auto","id":"519ae4c2-ddbc-4e1b-8725-43653a92fd77","name":"sharp-stone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n<Space\n    - topCard : Card\n    - bottomCard : Card\n    - leftCard : Card\n    - rightCard : Card\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-183.23438254411613,"y":-50.413690290313184},"zoom":1.545145034790039,"editorMode":"code"},"time":1709806555781,"type":"auto","id":"1145ca1f-d19a-4446-9f4a-4e63eeb02c58","name":"astonishing-branch"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    - top \n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard : Card\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-415.2344097134153,"y":-345.41365823477423},"zoom":1.545145034790039,"editorMode":"code"},"time":1709806495364,"type":"auto","id":"5d4350e2-0298-449b-b0d6-51d0412196f5","name":"mysterious-denmark"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass VisibleCorner{\n    connectedCard\n}\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-381.2580222051547,"y":-308.48982806264576},"zoom":1.5673742294311523,"editorMode":"code"},"time":1709806435360,"type":"auto","id":"b5019a49-ebc9-4211-972b-fb1c28bbf3d5","name":"chubby-barista"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-82.25798137739531,"y":-129.4898725639133},"zoom":1.5673741771533554,"editorMode":"code"},"time":1709806375275,"type":"auto","id":"46688f6b-0bd7-48ce-9d5d-df40aaba6a30","name":"shrilling-secretary"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-817.5268447079596,"y":-542.0572612818286},"zoom":2.158443145850656,"editorMode":"code"},"time":1709806315282,"type":"auto","id":"a5db4b1c-0004-4295-921b-4619da478f2e","name":"deafening-shampoo"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-630.741791779615,"y":-407.67117189636997},"zoom":1.878434834067307,"editorMode":"code"},"time":1709806255274,"type":"auto","id":"84c045f8-0717-4eca-aeac-fda3b947da06","name":"flat-processor"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-665.8477920509968,"y":5.693988877176089},"zoom":1.6452065471500394,"editorMode":"code"},"time":1709805835275,"type":"auto","id":"adf9eb94-4283-46af-a644-ebf50c2bab8e","name":"chilly-hamburger"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-695.8478190721985,"y":-42.30602012811442},"zoom":1.6452065471500394,"editorMode":"code"},"time":1709804455274,"type":"auto","id":"a328e65e-46fe-42d3-aa3c-0b53c1d60d30","name":"thousands-camera"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345337,"editorMode":"code"},"time":1709803495284,"type":"auto","id":"089c563d-ad51-49ff-ae8f-b53ebb4fdf4f","name":"odd-xylophone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + restoreVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345337,"editorMode":"code"},"time":1709719428343,"type":"auto","id":"8a58f3e3-35d1-4564-8439-460e5daf6f3d","name":"salmon-nightfall"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n    + fillVisibleCards(deck : List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345338,"editorMode":"code"},"time":1709719188341,"type":"auto","id":"a4eb1935-ee43-4c9e-8a49-3bde39071688","name":"miniature-salesclerk"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345336,"editorMode":"code"},"time":1709719068342,"type":"auto","id":"1b46ff2e-8a5e-4628-bc32-3c794719abee","name":"fast-bit"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n\n    - commonObjectives : List\n\n    + shuffleDeck(deck: List<card>)\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345336,"editorMode":"code"},"time":1709719008330,"type":"auto","id":"ac643089-ba12-42a5-9494-0bdcd7ba6db9","name":"high-airport"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n    - commonObjectives : List\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345336,"editorMode":"code"},"time":1709718948703,"type":"auto","id":"4a2aa830-cc14-4069-a593-845300073741","name":"low-mouse"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n    - visibleResourceCards : List\n    - resourceCardDeck : List\n    - visibleGoldenCards : List\n    - goldenCardDeck : List\n    - commonObject\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345336,"editorMode":"code"},"time":1709718888587,"type":"auto","id":"4384d5a1-be4c-48e3-a843-d53e7130da41","name":"puny-garden"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n    - visibleResourceCard : List\n    - resourceCardDeck : List\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345337,"editorMode":"code"},"time":1709718828330,"type":"auto","id":"4a40b7c7-ef83-4aa5-91b8-c3a7493c0be6","name":"repulsive-dress"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n\nclass Table{\n    - board\n    \n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329538345336,"editorMode":"code"},"time":1709718648339,"type":"auto","id":"45ae487e-163c-4860-a948-03d0c1f15381","name":"deep-dentist"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":79.33373243030627,"y":14.128944269335229},"zoom":0.8279329750970942,"editorMode":"code"},"time":1709712828335,"type":"auto","id":"a1ddbf10-eaa3-45f1-80a6-e3cea1937cdc","name":"elegant-flower"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-665.362226513639,"y":-463.18477196930235},"zoom":1.4272512547472398,"editorMode":"code"},"time":1709712648342,"type":"auto","id":"6c3411cc-7f92-46ab-b31e-f9931445d9a8","name":"purring-dress"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":15.796162963918071,"y":9.11492099187508},"zoom":1.0242993831634521,"editorMode":"code"},"time":1709712528331,"type":"auto","id":"dbddd2cc-59a4-4480-90b0-86d17f01e622","name":"hollow-tiger"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-22.203831196093972,"y":-2.8850649502094505},"zoom":1.0242993831634521,"editorMode":"code"},"time":1709712468337,"type":"auto","id":"097b6850-9bd8-42be-b813-7ef57284c51d","name":"bashful-furniture"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":0.7960993151492488,"y":1.1149613052142175},"zoom":1.0242993831634521,"editorMode":"code"},"time":1709711988331,"type":"auto","id":"26923fbf-3109-45ae-b881-22793a1991bd","name":"itchy-stone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-16.203866985809043,"y":11.11497144129494},"zoom":1.0242993831634521,"editorMode":"code"},"time":1709651183496,"type":"auto","id":"a2819972-31de-4b0d-a8a9-5491b15d4784","name":"curved-megabyte"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-0.918568891694747,"y":74.85101536486269},"zoom":0.7420965433120726,"editorMode":"code"},"time":1709641817277,"type":"auto","id":"d7094860-32c7-4ead-a8d0-ba6c3bf5a9ce","name":"bad-baby"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-0.918568891694747,"y":74.85101536486269},"zoom":0.7420965705306614,"editorMode":"code"},"time":1709639862271,"type":"auto","id":"3322ac75-6321-4d4c-9412-1be43c7fb719","name":"defeated-army"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true,"panZoom":true,"pan":{"x":-47.962748427530656,"y":-14.80462259713158},"zoom":1.005380392074585,"editorMode":"code"},"time":1709639682285,"type":"auto","id":"2a1347dd-1c11-4ca8-b683-29cf588eec56","name":"hissing-ocean"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective : ObjectiveCard\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-47.962748427530656,"y":-14.80462259713158},"zoom":1.0053804329735911,"editorMode":"code"},"time":1709635578288,"type":"auto","id":"91aaca78-c917-4bc0-9b72-86d38599c9bc","name":"sweet-nail"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints() int\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - objective :\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":75.65950043944481,"y":99.4938181938594},"zoom":0.6866883039474487,"editorMode":"code"},"time":1709635518286,"type":"auto","id":"b7709e2f-dcb9-4ee0-bd4a-78373ed99328","name":"nutritious-cpu"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - points : int\n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-181.50298755005787,"y":58.85874228067655},"zoom":1.1482315063476562,"editorMode":"code"},"time":1709635458292,"type":"auto","id":"9a46615a-b713-4c40-83a2-59f64a0ecd47","name":"bright-accident"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - \n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":17.496998876033647,"y":-132.1412467362232},"zoom":1.1482315063476562,"editorMode":"code"},"time":1709635398290,"type":"auto","id":"0626320c-d5ba-45b0-acd4-1476ca238b98","name":"uptight-belgium"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    \n\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":21.98112911279058,"y":-123.49267220995304},"zoom":1.123537302017212,"editorMode":"code"},"time":1709635338285,"type":"auto","id":"53017c04-dd42-4175-bd36-bd91aa7f67d4","name":"quiet-sundown"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":14.606546107801108,"y":-126.7688364742828},"zoom":1.1460514434068962,"editorMode":"code"},"time":1709635278283,"type":"auto","id":"9f292774-f5c4-4059-9a39-4d5d5bf3375d","name":"quick-tomato"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getPoints\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-104.13343008624837,"y":-76.20038256845373},"zoom":1.188333511352539,"editorMode":"code"},"time":1709635218294,"type":"auto","id":"59a96653-ba86-4df4-9f3a-d2a75747ae88","name":"powerful-television"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n\n    + getP\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-104.13343008624837,"y":-76.20038256845373},"zoom":1.188333511352539,"editorMode":"code"},"time":1709635158396,"type":"auto","id":"db80fb20-bdb0-426d-95de-01ef9d043d47","name":"fluffy-spring"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n}\n\nObjectiveCard *-->\"2\" ObjCardSide\n\nObjCardSide <|-- ObjCardFront\nObjCardSide <|-- ObjCardBack\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-104.13343008624837,"y":-76.20038256845373},"zoom":1.188333511352539,"editorMode":"code"},"time":1709635098287,"type":"auto","id":"832666f0-1f25-40cb-be65-86708a201f5c","name":"miniature-eggplant"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    - currSide : ObjCardSide\n}\n\nObjectiveCard *-->\"2\" ObjCardSide\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-104.13343008624837,"y":-76.20038256845373},"zoom":1.188333511352539,"editorMode":"code"},"time":1709635038283,"type":"auto","id":"32d0c3ef-13d9-4a1a-9dba-3e9a4932b948","name":"ripe-cpu"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    \n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-104.13343008624837,"y":-76.20038256845373},"zoom":1.188333511352539,"editorMode":"code"},"time":1709634978283,"type":"auto","id":"fb401f62-d776-4ef1-8992-1eee76d5f341","name":"hissing-waiter"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nclass ObjectiveCard{\n    \n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":165.86655757658554,"y":-20.20041164685395},"zoom":1.188333511352539,"editorMode":"code"},"time":1709634798282,"type":"auto","id":"96e6460c-bbe0-43fe-a86a-e2e784fd58b8","name":"abiding-eve"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n    - firstPlayerToken\n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":114.8665201275683,"y":-18.200375078820148},"zoom":1.188333511352539,"editorMode":"code"},"time":1709634678294,"type":"auto","id":"b0987568-1ba2-40c6-87e8-4b51c8e0f012","name":"yummy-painter"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":114.8665201275683,"y":-18.200375078820148},"zoom":1.188333565254468,"editorMode":"code"},"time":1709634618283,"type":"auto","id":"e99fa5fd-2343-427b-bb83-0b4011d23af6","name":"alert-traffic"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-19.133477086831846,"y":-31.20037399818293},"zoom":1.188333565254468,"editorMode":"code"},"time":1709634498293,"type":"auto","id":"a2b8d8ee-676d-4125-bb3c-5d4b40864eac","name":"bumpy-hairdresser"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":1.7243741984496168,"y":6.735259547721231},"zoom":0.9820938130095842,"editorMode":"code"},"time":1709634378295,"type":"auto","id":"130b69e1-9674-4244-89a2-9d705cd75811","name":"sparse-xylophone"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token\n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709634198292,"type":"auto","id":"40a6de86-6cd6-4e8d-ac08-7592c113f561","name":"angry-midnight"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - playArea : Card[][]\n\n    - token \n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709634138281,"type":"auto","id":"0ceb4c7e-18fd-4e35-94ef-fc42598b3469","name":"acidic-bit"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n\n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int\n\n    - currScore : int\n\n    - \n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709634078288,"type":"auto","id":"3fe8b80c-4216-449b-97bb-a0a3baf496b7","name":"elegant-quill"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n\n    - animalCount : int\n    - plantCount : int\n    - fungiCount : int\n    - insectCount : int\n    \n    - quillCount : int\n    - inkwellCount : int\n    - manuscriptCount : int \n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709634018288,"type":"auto","id":"d81c9fa9-cc5c-4b71-a6a4-bbf92a79a7ea","name":"thundering-coffeeshop"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    - hand : List Card\n    - animalRes : int\n    - plantRes : int\n    - Res : int\n    - animalRes : int\n    - animalRes : int\n    - animalRes : int\n    - animalRes : int \n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633899747,"type":"auto","id":"58a21047-df26-4190-84df-85cf4c8dc274","name":"salmon-garage"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass Player{\n    hand .\n}","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633839868,"type":"auto","id":"03f132dd-0c6e-4a45-bf97-34a30c8e40dc","name":"hallowed-quill"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side{\n    + placeSide() void\n}\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633779738,"type":"auto","id":"8dd16292-4bc8-436b-b5a0-1647f31e66c4","name":"acrid-king"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Side\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633719744,"type":"auto","id":"691154bf-bb22-4b47-9463-cfed9520a8b9","name":"some-daybreak"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nclass Back{\n    - permanentResource : List ResourceType\n}\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633659741,"type":"auto","id":"40a8fabc-0152-4c65-b3f5-be4c09de4b4e","name":"bent-address"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- StarterCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":36.5905216598386,"y":-1.1841356229667674},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633599733,"type":"auto","id":"96e02c11-6c59-4a63-aa11-951e3140a0d7","name":"appetizing-refrigerator"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass ResourceCard{\n    - cardType : ResourceType\n}\n\nclass GoldenCard{\n    - cardType : ResourceType\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard <|-- \nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":183.59050934622928,"y":17.81585363848224},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633539732,"type":"auto","id":"95464726-a4ed-43dc-a6ad-0139a2190f90","name":"rapid-garage"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - cardType : ResourceType\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":146.59050443172765,"y":8.815865850829539},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633479741,"type":"auto","id":"a57bd387-af73-48f9-ab87-f0ace7cb0c52","name":"unimportant-oil"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - cardType : ResourceType\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nclass StartingCard\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":146.59050443172765,"y":8.815865850829539},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633359738,"type":"auto","id":"a7b5707a-d59f-43b2-99bc-4e66b5818111","name":"powerful-egypt"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - cardType : ResourceType\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":146.59050443172765,"y":8.815865850829539},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633179738,"type":"auto","id":"50f9c31c-4c8b-400f-ba0a-7c3448a9909a","name":"happy-ocean"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - card\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":96.59050094527787,"y":8.815865850829539},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633119743,"type":"auto","id":"94c4a3f3-7c11-4e44-98dd-30cceaba5bc6","name":"acidic-wire"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    - cardTy\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":96.59050094527787,"y":8.815865850829539},"zoom":0.9576501846313477,"editorMode":"code"},"time":1709633059751,"type":"auto","id":"33b66009-e12b-4e48-9455-d69f479d450b","name":"abrasive-lamp"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n\n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nclass ObjectiveCard{\n    \n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":96.59050094527787,"y":8.815865850829539},"zoom":0.9576501914971303,"editorMode":"code"},"time":1709632999737,"type":"auto","id":"f12321a2-9c28-4f9f-8e76-0627ebedfc45","name":"freezing-waitress"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nclass CardCorner{\n    \n}\n\nCardCorner <|-- VisibleCorner\nCardCorner <|-- HiddenCorner\nVisibleCorner <|-- ResourceCorner\nVisibleCorner <|-- ObjectCorner\nVisibleCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":-73.80045470664348,"y":-156.5025356532022},"zoom":1.0534151792526245,"editorMode":"code"},"time":1709632939751,"type":"auto","id":"e516c230-72b7-4279-8e2b-0b4ff96292fa","name":"early-electrician"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- ObjectCorner\nCardCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":175.45817608304796,"y":62.20276528981474},"zoom":0.7427438497543335,"editorMode":"code"},"time":1709632879728,"type":"auto","id":"1f4b8113-45e1-48ba-b3b1-8e867eacaee8","name":"salty-oxygen"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\nCardCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":175.45817608304796,"y":62.20276528981474},"zoom":0.7427438383214984,"editorMode":"code"},"time":1709632819739,"type":"auto","id":"99ff5ea7-9c4e-4bac-9775-b51c78bb55f1","name":"gorgeous-librarian"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\nCardCorner <|-- EmptyCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":66.70807720873351,"y":26.250377898093113},"zoom":0.8958500027656556,"editorMode":"code"},"time":1709632759737,"type":"auto","id":"342756a6-b9ba-46f9-babd-4503b3d1fb5e","name":"bashful-man"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\n\nSide <|-- Front\nSide <|-- Back\nSide *-->\"4\" CardCorner\n\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":66.70807720873351,"y":26.250377898093113},"zoom":0.8958500027656556,"editorMode":"code"},"time":1709632699744,"type":"auto","id":"60fa2644-33d3-4baa-85bc-a884cad844a9","name":"icy-magazine"},{"state":{"code":"classDiagram\n\nclass Card{\n    - currSide : Side\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\nSide <|-- Front\nSide <|-- Front\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632639734,"type":"auto","id":"1bcc02ea-3e3e-48a3-9b93-f6f8f910cf05","name":"stocky-salesclerk"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"2\" Side\nSide\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632579742,"type":"auto","id":"5043f448-426a-4554-82db-410f6534c79b","name":"acidic-notebook"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632519734,"type":"auto","id":"10478445-3dad-43e3-85f8-9a2ad40b1472","name":"eager-actor"},{"state":{"code":"classDiagram\n\nclass PlaceableCard{\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nPlaceableCard <|-- ResourceCard\nPlaceableCard <|-- GoldenCard\nPlaceableCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632459744,"type":"auto","id":"c454cd29-45c7-4df7-b692-ad5023623145","name":"gentle-leather"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n    + place(x: int, y: int) void\n}\n\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632279736,"type":"auto","id":"81f7e1ef-e874-4bb4-b040-443d40da4cc7","name":"moldy-appointment"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n    + place(x: int, y: int) void\n}\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632159754,"type":"auto","id":"d9340e72-ef88-4076-a44f-bd64c9113cb3","name":"lazy-rain"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n    + place(int x, int y) void\n}\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632099743,"type":"auto","id":"306e1735-dcbf-479b-bb5c-461750a4a626","name":"itchy-toddler"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n}\nCard <|-- ResourceCard\nCard <|-- GoldenCard\nCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":122.12771195317663,"y":71.486318992241},"zoom":0.6264786720275879,"editorMode":"code"},"time":1709632039743,"type":"auto","id":"e31d3c50-939e-446d-b862-c54d1edaf27e","name":"faithful-painting"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n}\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard *-->\"4\" CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":71.93800103505502,"y":42.88884793471794},"zoom":0.7513148680743575,"editorMode":"code"},"time":1709631979738,"type":"auto","id":"ee90e01d-dc64-4580-9613-74b0be27dbb6","name":"tight-nest"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n}\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard *--> CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":112.00001847043215,"y":25.86906110590457},"zoom":1,"editorMode":"code"},"time":1709631920549,"type":"auto","id":"00e444d8-c996-4522-99f0-42a132cfb732","name":"callous-machine"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n}\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard --\\* CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true,"pan":{"x":112.00001847043215,"y":25.86906110590457},"zoom":1,"editorMode":"code"},"time":1709631859736,"type":"auto","id":"48833b40-00a5-44d4-be42-91a05a917df3","name":"tasty-noon"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n}\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard <-- CardCorner\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false,"panZoom":true},"time":1709631799748,"type":"auto","id":"cd755578-6bea-4924-8a05-b4ea531e88f9","name":"fresh-architect"},{"state":{"code":"classDiagram\n\nclass Card{\n    + toString() String\n}\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631739746,"type":"auto","id":"189c5b66-7f13-4960-bb2f-815141decd38","name":"bored-church"},{"state":{"code":"classDiagram\n\nclass Card\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass ResourceType{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass ObjectType{\n    <<enumeration>>\n    QUILL\n    INKWELL\n    MANUSCRIPT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631679732,"type":"auto","id":"1330e9b2-9dce-4840-bdd4-920bbf21a766","name":"victorious-zoo"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass Resource{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nclass Object{\n    <<enumeration>>\n    ANIMAL\n    PLANT\n    FUNGI\n    INSECT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631619745,"type":"auto","id":"09ed792b-8819-4b92-9fd6-79281b9ad2bf","name":"plain-jordan"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n\nclass Resource{\n    <<enumeration>>\n    FUNGI\n    PLANT\n    ANIMAL\n    INSECT\n}\n\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631559732,"type":"auto","id":"473c2ee9-46c9-4f87-9d94-ce329d5fb768","name":"abundant-exabyte"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\nclass Color{\n    <<enumeration>>\n    RED\n    BLUE\n    GREEN\n    WHITE\n    BLACK\n}\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631499738,"type":"auto","id":"85539a52-8743-4e92-bf17-1ac141d632f8","name":"appalling-egg"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n<<Enumeration>>Resource : Mushroom\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631439745,"type":"auto","id":"8d851fc3-cd45-4c4f-89db-c2a03ca62566","name":"some-jewellery"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631380546,"type":"auto","id":"e81b0eca-eef7-4b5a-8686-79fbb5d3a982","name":"salty-wolf"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\n(enum)Object : objType\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631319731,"type":"auto","id":"036411a3-b25b-48db-a13c-29302920f7d2","name":"savory-terabyte"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner <|-- ResourceCorner\nCardCorner <|-- HiddenCorner\nCardCorner <|-- ObjectCorner\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631259746,"type":"auto","id":"137fbfda-3e18-4cf8-9a8a-e77eb1cfc02b","name":"old-pharmacist"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner\nCardCorner : getType()\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631199748,"type":"auto","id":"9ea3a430-f229-45db-98c7-bbf7f4226ffd","name":"delicious-air"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <|-- ObjectiveCard\nCard : toString()\nCardCorner\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631139739,"type":"auto","id":"10247963-9c85-465a-b5d6-3d192f299622","name":"billowy-china"},{"state":{"code":"classDiagram\nCard <|-- ResourceCard\nCard <\\-- ObjectiveCard\nCard : toString()\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631079737,"type":"auto","id":"97243ad3-eb7b-4667-8404-2bcbae953c9e","name":"poor-dress"},{"state":{"code":"classDiagram\nCard <-- ResourceCard\nCard <-- ObjectiveCard\nCard : toString()\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709631019751,"type":"auto","id":"a6f1b48c-c002-4c7a-87a8-e595ff6ff74d","name":"shaggy-electrician"},{"state":{"code":"classDiagram\nCard <|-- AveryLongClass\nCard : toString()\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709630959744,"type":"auto","id":"28c3c1a0-c13c-4a48-8c8d-e0e47edab60c","name":"creamy-waitress"},{"state":{"code":"classDiagram\nCard <|-- AveryLongClass : Cool\nClass03 *-- Class04\nClass05 o-- Class06\nClass07 .. Class08\nClass09 --> C2 : Where am i?\nClass09 --* C3\nClass09 --|> Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nClass08 <--> C2: Cool label","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":false},"time":1709630899730,"type":"auto","id":"f7378539-c47b-433b-940b-034cc6b14dc8","name":"mango-bear"}]